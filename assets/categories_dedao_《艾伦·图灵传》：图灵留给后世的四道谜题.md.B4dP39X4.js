import{f as e,D as s,c as n,o as A,a1 as o,b as l,k as a,w as B,a as p,H as t,a2 as i}from"./chunks/framework.Baju3tsf.js";const _=JSON.parse('{"title":"《艾伦·图灵传》：图灵留给后世的四道谜题","description":"带100个人重建文明，为什么必定有图灵？","frontmatter":{"title":"《艾伦·图灵传》：图灵留给后世的四道谜题","description":"带100个人重建文明，为什么必定有图灵？","created":"2025-01-18T20:02:41.000Z","modification_date":"2025-01-18T20:02:41.000Z","tags":["人物传记/科学家"],"cover_url":"https://piccdn3.umiwi.com/img/202405/27/202405271146386719658510.jpeg?x-oss-process=image/resize,m_fill,h_224,w_168","source":"https://www.dedao.cn/search/result?q=《艾伦·图灵传》：图灵留给后世的四道谜题&score=暂无评分&learn_count=6.3万次学习","author":null},"headers":[],"relativePath":"categories/dedao/《艾伦·图灵传》：图灵留给后世的四道谜题.md","filePath":"categories/dedao/《艾伦·图灵传》：图灵留给后世的四道谜题.md"}'),d={name:"categories/dedao/《艾伦·图灵传》：图灵留给后世的四道谜题.md"};function g(h,E,m,C,u,D){const r=s("Mermaid");return A(),n("div",null,[E[3]||(E[3]=o('<h1 id="《艾伦·图灵传》-图灵留给后世的四道谜题" tabindex="-1">《艾伦·图灵传》：图灵留给后世的四道谜题 <a class="header-anchor" href="#《艾伦·图灵传》-图灵留给后世的四道谜题" aria-label="Permalink to &quot;《艾伦·图灵传》：图灵留给后世的四道谜题&quot;">​</a></h1><h2 id="可视化总结" tabindex="-1">可视化总结 <a class="header-anchor" href="#可视化总结" aria-label="Permalink to &quot;可视化总结&quot;">​</a></h2><p>#人物传记/科学家</p><h2 id="mermaid-流程图" tabindex="-1">Mermaid 流程图 <a class="header-anchor" href="#mermaid-流程图" aria-label="Permalink to &quot;Mermaid 流程图&quot;">​</a></h2>',4)),(A(),l(i,null,{default:B(()=>[t(r,{id:"mermaid-12",class:"mermaid",graph:"graph%20LR%0AA%5B%E7%94%A8%E6%88%B7%E6%89%93%E5%BC%80%E7%AB%A0%E9%B1%BC%E4%B9%A6%E5%9C%BA%5D%20--%3E%20B%7B%E6%9C%AC%E6%9C%9F%E4%B8%BB%E9%A2%98%EF%BC%9F%7D%0AB%20--%20%E5%9B%BE%E7%81%B5%20--%3E%20C%5B%E4%BB%8B%E7%BB%8D%E5%9B%BE%E7%81%B5%E7%94%9F%E5%B9%B3%E5%8F%8A%E8%B4%A1%E7%8C%AE%5D%0AC%20--%3E%20D%7B%E5%9B%BE%E7%81%B5%E4%B9%8B%E8%B0%9C%EF%BC%9F%7D%0AD%20--%20%E7%A0%B4%E8%A7%A3%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%E5%AF%86%E7%A0%81%E6%9C%BA%20--%3E%20E%5B%E8%AE%B2%E8%BF%B0%E7%A0%B4%E8%A7%A3%E8%BF%87%E7%A8%8B%5D%0AD%20--%20%E5%9B%BE%E7%81%B5%E6%9C%BA%E6%A8%A1%E5%9E%8B%20--%3E%20F%5B%E8%A7%A3%E9%87%8A%E5%9B%BE%E7%81%B5%E6%9C%BA%E5%8E%9F%E7%90%86%5D%0AD%20--%20%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98%20--%3E%20G%5B%E8%A7%A3%E9%87%8A%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98%5D%0AD%20--%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%80%9D%E8%80%83%20--%3E%20H%5B%E5%9B%BE%E7%81%B5%E6%B5%8B%E8%AF%95%E5%8F%8A%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8F%91%E5%B1%95%E8%B7%AF%E5%BE%84%5D%0AD%20--%20%E5%9B%BE%E7%81%B5%E4%B9%8B%E6%AD%BB%20--%3E%20I%5B%E8%AE%B2%E8%BF%B0%E5%9B%BE%E7%81%B5%E6%AD%BB%E4%BA%A1%E5%8F%8A%E5%B9%B3%E5%8F%8D%5D%0AI%20--%3E%20J%5B%E8%8A%82%E7%9B%AE%E6%80%BB%E7%BB%93%E5%92%8C%E9%A2%84%E5%91%8A%5D%0AJ%20--%3E%20K%5B%E7%BB%93%E6%9D%9F%5D%0A"})]),fallback:B(()=>E[0]||(E[0]=[p(" Loading... ")])),_:1})),E[4]||(E[4]=a("h2",{id:"mermaid-状态图",tabindex:"-1"},[p("Mermaid 状态图 "),a("a",{class:"header-anchor",href:"#mermaid-状态图","aria-label":'Permalink to "Mermaid 状态图"'},"​")],-1)),(A(),l(i,null,{default:B(()=>[t(r,{id:"mermaid-16",class:"mermaid",graph:"stateDiagram%0A%20%20%20%20%5B*%5D%20--%3E%20%E6%94%B6%E5%90%AC%E8%8A%82%E7%9B%AE%0A%20%20%20%20%E6%94%B6%E5%90%AC%E8%8A%82%E7%9B%AE%20--%3E%20%E4%BB%8B%E7%BB%8D%E5%9B%BE%E7%81%B5%20%3A%20%E5%BC%80%E5%A7%8B%0A%20%20%20%20%E4%BB%8B%E7%BB%8D%E5%9B%BE%E7%81%B5%20--%3E%20%E5%9B%BE%E7%81%B5%E4%B9%8B%E8%B0%9C%0A%20%20%20%20%E5%9B%BE%E7%81%B5%E4%B9%8B%E8%B0%9C%20--%3E%20%E7%A0%B4%E8%A7%A3%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%0A%20%20%20%20%E7%A0%B4%E8%A7%A3%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%20--%3E%20%E5%9B%BE%E7%81%B5%E6%9C%BA%E6%A8%A1%E5%9E%8B%0A%20%20%20%20%E5%9B%BE%E7%81%B5%E6%9C%BA%E6%A8%A1%E5%9E%8B%20--%3E%20%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98%0A%20%20%20%20%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98%20--%3E%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%80%9D%E8%80%83%0A%20%20%20%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%80%9D%E8%80%83%20--%3E%20%E5%9B%BE%E7%81%B5%E4%B9%8B%E6%AD%BB%0A%20%20%20%20%E5%9B%BE%E7%81%B5%E4%B9%8B%E6%AD%BB%20--%3E%20%E8%8A%82%E7%9B%AE%E6%80%BB%E7%BB%93%0A%20%20%20%20%E8%8A%82%E7%9B%AE%E6%80%BB%E7%BB%93%20--%3E%20%E8%8A%82%E7%9B%AE%E9%A2%84%E5%91%8A%0A%20%20%20%20%E8%8A%82%E7%9B%AE%E9%A2%84%E5%91%8A%20--%3E%20%5B*%5D%20%3A%20%E7%BB%93%E6%9D%9F%0A"})]),fallback:B(()=>E[1]||(E[1]=[p(" Loading... ")])),_:1})),E[5]||(E[5]=a("h2",{id:"mermaid-思维导图",tabindex:"-1"},[p("Mermaid 思维导图 "),a("a",{class:"header-anchor",href:"#mermaid-思维导图","aria-label":'Permalink to "Mermaid 思维导图"'},"​")],-1)),(A(),l(i,null,{default:B(()=>[t(r,{id:"mermaid-20",class:"mermaid",graph:"mindmap%0A%20%20root((%E7%AB%A0%E9%B1%BC%E4%B9%A6%E5%9C%BA%20-%20%E5%9B%BE%E7%81%B5))%0A%20%20%20%20%E6%88%98%E4%BA%89%E8%8B%B1%E9%9B%84%EF%BC%8CAI%E4%B9%8B%E7%88%B6%0A%20%20%20%20%20%20%E7%A0%B4%E8%A7%A3%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%0A%20%20%20%20%20%20%20%20%E4%BA%8C%E6%88%98%E8%B4%A1%E7%8C%AE%0A%20%20%20%20%20%20%20%20%E5%AF%86%E7%A0%81%E5%AD%A6%0A%20%20%20%20%20%20%E5%9B%BE%E7%81%B5%E6%9C%BA%0A%20%20%20%20%20%20%20%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA%E6%A8%A1%E5%9E%8B%0A%20%20%20%20%20%20%20%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B9%8B%E7%88%B6%0A%20%20%20%20%20%20%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98%0A%20%20%20%20%20%20%20%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%83%BD%E5%8A%9B%E8%BE%B9%E7%95%8C%0A%20%20%20%20%20%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%80%9D%E8%80%83%0A%20%20%20%20%20%20%20%20%E5%9B%BE%E7%81%B5%E6%B5%8B%E8%AF%95%0A%20%20%20%20%20%20%20%20%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8F%91%E5%B1%95%E8%B7%AF%E5%BE%84%0A%20%20%20%20%20%20%20%20%E8%AE%BE%E8%AE%A1%E6%B4%BE%20vs%20%E5%AD%A6%E4%B9%A0%E6%B4%BE%0A%20%20%20%20%E5%9B%BE%E7%81%B5%E4%B9%8B%E6%AD%BB%0A%20%20%20%20%20%20%20%20%E6%80%A7%E5%8F%96%E5%90%91%E8%BF%AB%E5%AE%B3%0A%20%20%20%20%20%20%20%20%E5%B9%B3%E5%8F%8D%0A%20%20%20%20%E8%B0%9C%E9%A2%98%0A%20%20%20%20%20%20%20%20%E8%B4%AF%E7%A9%BF%E4%B8%80%E7%94%9F%0A%20%20%20%20%20%20%20%20%E7%94%9F%E5%89%8D%E8%BA%AB%E5%90%8E%0A%20%20%20%20%E8%8A%82%E7%9B%AE%E6%80%BB%E7%BB%93%0A%20%20%20%20%20%20%20%20%E6%88%91%E4%BB%AC%E9%83%BD%E5%9C%A8%E5%AD%A6%0A%20%20%20%20%E4%B8%8B%E6%9C%9F%E9%A2%84%E5%91%8A%0A%20%20%20%20%20%20%20%20%E7%88%B1%E5%9B%A0%E6%96%AF%E5%9D%A6%0A"})]),fallback:B(()=>E[2]||(E[2]=[p(" Loading... ")])),_:1})),E[6]||(E[6]=o('<h2 id="内容总结" tabindex="-1">内容总结 <a class="header-anchor" href="#内容总结" aria-label="Permalink to &quot;内容总结&quot;">​</a></h2><div class="language-ad-think vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ad-think</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>好的，用户提供的文本是关于章鱼书场的一期节目内容，讲述了艾伦·图灵的生平和贡献。用户可能希望我总结或分析这段内容，或者回答与图灵相关的问题。首先，我需要理解文本的结构和主要内容。文本分为几个部分：介绍图灵的多领域贡献、二战密码破解、计算机理论、人工智能思考以及图灵的悲惨结局。用户可能对图灵的具体成就、图灵测试、停机问题等感兴趣。需要注意用户是否学生、科技爱好者或对历史人物感兴趣的人。用户可能希望深入了解图灵的影响，或者探讨他的生平和遗产。需要确认是否有需要补充的信息，比如图灵奖的现状，或现代AI的发展与图灵的关系。此外，用户可能希望用中文进行详细解释，所以要保持语言流畅易懂。需要避免错误，比如确保图灵的生卒年正确（1912-1954），死亡原因等。可能需要指出文本中的一些关键点，如密码破解对二战的影响，图灵机的重要性，以及他的性取向导致的悲剧。最后，用户提到下一期是爱因斯坦，可能希望延续科学人物系列，但当前焦点应保持在图灵。总结时需涵盖主要成就和生平，保持结构清晰，使用适当的段落和重点标记。</span></span></code></pre></div><p>以下是关于艾伦·图灵生平与贡献的总结与分析，结合其科学与人文双重遗产：</p><hr><h3 id="一、图灵的核心成就" tabindex="-1"><strong>一、图灵的核心成就</strong> <a class="header-anchor" href="#一、图灵的核心成就" aria-label="Permalink to &quot;**一、图灵的核心成就**&quot;">​</a></h3><ol><li><p><strong>密码学与二战贡献</strong></p><ul><li>破解德军恩尼格玛密码机，缩短二战进程。他设计的“炸弹”解密机通过德军通信规律（如固定格式的天气报告）缩小可能性，最终实现每小时破解密码。</li><li>丘吉尔直接批示支持其研究，但战后因保密协议长期未被公开表彰。</li></ul></li><li><p><strong>计算机科学奠基</strong></p><ul><li><strong>图灵机模型</strong>：提出通用计算机理论框架，奠定现代计算机逻辑基础。核心思想包括： <ul><li>运算分解为基本步骤</li><li>无限纸带作为存储载体</li><li>程序化执行模式（预示程序员职业诞生）</li></ul></li><li><strong>停机问题</strong>：证明计算机存在不可解问题，划定计算机能力边界。</li></ul></li><li><p><strong>人工智能先驱</strong></p><ul><li><strong>图灵测试</strong>（1950年）：提出“机器能否思考”的判定标准，影响至今。</li><li>预言AI需通过学习而非纯规则设计实现，但早期科学家高估理性规则路径（设计派），低估数据驱动（学习派）的潜力。</li></ul></li><li><p><strong>跨学科探索</strong></p><ul><li>生物学：用化学反应模型解释生物形态生成（图灵斑图）。</li><li>哲学：探讨意识、自由意志与机器智能的本质。</li></ul></li></ol><hr><h3 id="二、图灵的人生隐喻" tabindex="-1"><strong>二、图灵的人生隐喻</strong> <a class="header-anchor" href="#二、图灵的人生隐喻" aria-label="Permalink to &quot;**二、图灵的人生隐喻**&quot;">​</a></h3><ol><li><p><strong>解谜者与谜题本身</strong></p><ul><li>一生破解科学谜题，却因性取向成为社会偏见的牺牲品。化学阉割与自杀（1954年）暴露科学与伦理的冲突。</li><li>迟到的平反：2009年英国政府道歉，2013年女王赦免，反映社会认知滞后于科学进步。</li></ul></li><li><p><strong>苹果符号的双重性</strong></p><ul><li>自杀的毒苹果成为悲剧象征，与乔布斯“未被证实的致敬”构成科技史的文化注脚。</li><li>隐喻知识之果：图灵以智慧推动文明，却因人性弱点陨落。</li></ul></li></ol><hr><h3 id="三、现代回响" tabindex="-1"><strong>三、现代回响</strong> <a class="header-anchor" href="#三、现代回响" aria-label="Permalink to &quot;**三、现代回响**&quot;">​</a></h3><ol><li><p><strong>技术影响</strong></p><ul><li><strong>图灵奖</strong>（1966年设立）：计算机领域最高荣誉，获奖者包括深度学习三巨头（Hinton等）。</li><li><strong>AI发展</strong>：AlphaGo（2016年）实现图灵“机器对弈”预言，但路径依赖数据而非纯规则，印证其“学习派”思想。</li></ul></li><li><p><strong>人文启示</strong></p><ul><li><strong>科技伦理</strong>：图灵遭遇警示技术发展中包容性的重要。</li><li><strong>天才的代价</strong>：科学突破常伴随个体悲剧，如哥德尔、特斯拉等。</li></ul></li></ol><hr><h3 id="四、拓展思考" tabindex="-1"><strong>四、拓展思考</strong> <a class="header-anchor" href="#四、拓展思考" aria-label="Permalink to &quot;**四、拓展思考**&quot;">​</a></h3><ul><li><strong>如果图灵活在今天</strong>：他对AI伦理（如GPT-4）、量子计算或生物计算会有何见解？</li><li><strong>历史假设</strong>：若二战密码未被破解，科技史进程是否会被改写？</li><li><strong>科学与社会的对话</strong>：如何避免图灵式悲剧在当代重演？</li></ul><hr><p>图灵的故事不仅是科技史诗，更是一面镜子，映照人类在理性与偏见、创新与伦理间的永恒挣扎。正如他所说：“<strong>我们都在学</strong>”——无论是机器还是人类，探索之路从未停歇。</p><h2 id="修复文案" tabindex="-1">修复文案 <a class="header-anchor" href="#修复文案" aria-label="Permalink to &quot;修复文案&quot;">​</a></h2><p>章鱼书场，每周开讲。</p><p>你好，我是陈章鱼。这一季，咱们品读人物传记，增进人生动力。</p><p>这一期要讲的是计算机之父，也是人工智能之父——科学家图灵。这一期讲的故事主要来自于这本《艾伦·图灵传》。</p><p><strong>战争英雄却无名，AI之父有才情</strong></p><p><strong>今天不把别人讲，单讲天才叫图灵</strong></p><p>有人说，如果要带着100个人去另一个星球，从零开始去重建地球的文明。那么这 100个人当中一定要有这个人，艾伦·图灵。</p><p>他对人类科技和文明的影响有多深呢？</p><p>今年是他去世的整整70周年，但是70年后的今天，你还能在很多的科技前沿领域听到图灵这个名字。</p><p>比如说计算机领域最负盛名的奖项，被称为“计算机界的诺贝尔奖”，就是以他命名的图灵奖。至今在用的绝大多数计算机底层的模型都是他提出来的，叫做“图灵机”。AI 人工智能到底是不是真的拥有智能？这个问题最广泛的判断标准也是他提出来的，叫做“图灵测试”。甚至这个图灵测试已经超过了科技的领域，影响了当今一批的小说和电影。今天的文艺作品里边，只要是有计算机，那就绕不过图灵当年对于人工智能的思考。</p><p>甚至图灵作为一名数学家，还参与了第二次世界大战，因为他带着团队破译了德军的密码，不敢说是他以一己之力扭转了历史，至少也是大大加快了纳粹德国的覆灭。</p><p>那我们要怎样去了解图灵这个人呢？我身边的这本《艾伦·图灵传》，它有一个副标题叫做《如迷的解谜者》。</p><p><strong>谜，可以说是贯穿图灵一生的主题。</strong></p><p>图灵这一生都跟哪些谜相关呢？</p><p>图灵他对许多哲学还有科学的谜题都表现出了浓厚的兴趣，有些谜题在他的专业领域之内，比如数学、计算机，有些谜题则延伸到了其他的领域，比如生物学、逻辑学、哲学。他一生研究的谜题大概有以下这些：</p><p>数学中的哥德尔不完备定理，还有希尔伯特第十问题。</p><p>计算机领域的图灵机问题，还有停机问题。</p><p>还有我们刚才提到的第二次世界大战期间，他破解了纳粹德国的恩尼格玛密码机。这不仅是一个技术的难题，更是一个影响战争进程的重大挑战。</p><p>二战之后，图灵对于密码学、信息安全的兴趣继续延伸，他继续去研究如何设计和破译复杂的密码系统，成为了密码学的泰斗。</p><p>图灵还设想了机器可以通过学习和适应来提高自己的性能，这个思想就成为了后来机器学习的基础，也成为了人工智能的基础。</p><p>还有咱们前面提到的图灵测试，判断一台机器是否真的拥有智能。</p><p>这些还只是图灵自己专业领域内思考过的谜题。他甚至还解答过生物学的谜题，比如说，他提出了化学反应扩散系统的理论，用来解释生物体的形态到底那个形成过程是怎样的。他还对于生物体怎样计算信息、处理信息表现出了浓厚的兴趣，这一些思考成为了后来一个尖端的领域，叫做生物计算，还有合成生物学。</p><p>除此之外，图灵还有哲学的思辨，比如说到底什么叫做意识？什么叫做自我？什么叫做自由意志？人类的行为是不是可以像机器一样预测的？反过来，机器又能不能够像人一样真的拥有自我的意识？这都是图灵思考的范围。</p><p>甚至除此之外，图灵还对于一些游戏，比如象棋、围棋、数独也表现出了浓厚的兴趣，他研究了这些游戏当中怎样去做策略，怎样去做决策的问题。</p><p>通过对这些谜题的探索，图灵不仅在很多科学领域作出了开放性的贡献，在未来，他也激发了后世科学家乃至哲学家的思考和研究。</p><p>不仅在生前，其实图灵在身后也留下了许多的谜题，最著名的是一个苹果。</p><p>有人就问过乔布斯，一个经典的传说，是不是苹果公司的那个LOGO，那个被咬了一口的苹果，就是在向图灵致敬呢？因为图灵性取向的身份曾经饱受英国政府的迫害，最终他是吃下了一颗涂了氰化物的毒苹果而自杀的。</p><p>乔布斯对这个问题的回答是，“其实并没有”。他们当初把公司起名叫做苹果，主要是因为苹果的名字，那个Apple，A打头的名字可以排在电话簿的最前边，而那个LOGO之所以被咬了一块，是因为如果画一个完整的苹果，别人会分不清楚那到底是个苹果还是个樱桃。</p><p>但是回答完这个问题之后，乔布斯感慨说，要是当初自己给公司取名苹果，真的是为了纪念图灵，那该是一个多么天才的想法。</p><p>围绕着图灵生前身后这么多的谜题，我们要在不到一个小时的时间内把它们都说完，当然是不可能的，所以从这里边我选择了四个来向你讲述。</p><p>我们先来说图灵这一生当中最传奇的一个谜题，那就要数第二次世界大战中图灵破解德军密码的那个故事了。</p><p>有人说，第一次世界大战可以称为是化学家的战争，因为第一次世界大战的战场上出现了芥子毒气。第二次世界大战可以称为是物理学家的战争，因为是原子弹的出现，最终结了战局。如果有第三次世界大战的话，那一定是数学家的战争，因为数学家将掌控大战中最关键的武器，那就是信息。</p><p>其实第二次世界大战就已经是数学家的战争了，加密和解谜的拉锯战直接影响了战争的走向。这其中最精彩、最为人津津乐道的一个战例，那就要数英国密码学家破解德国的恩尼格玛密码机的故事了。这也是密码学历史上最著名的攻防战，可以说直接影响了历史的进程。</p><p>恩尼格玛是一种机械电子式的加密机，因为在那个年代计算机还没有出现。恩尼格玛是由一堆的齿轮、电线、灯泡、转盘、摇杆一起组成的。使用机器做繁琐的加密工作，虽然在之前也有过，只是因为他们都没有量产，所以都没有流行。恩尼格玛机是第一个大规模量产的加密机，从它开始，密码学不再依赖纸和笔的运算，而是使用机械和电子加密。</p><p>恩尼格玛密码机的样子有点像一台打字机，有键盘，有显示装置，它的内部是一大堆的机械和电子的零件，操作员每敲下一个字母，经过机械和电子的转换，显示装置就会显示另一个对应的字母，这就是经过加密之后的编码了，你输进去是个A，输出的可能是个C。这听起来好像没有什么，但是你要知道，恩尼格玛最厉害的地方在于核心的加密零件，那个编码器的核心是齿轮，每敲下一个字母之后，这个齿轮就旋转一格，齿轮的转动会使得密码机内部的线路连接发生变化，加密的结果就不一样了。</p><p>早期的恩尼格玛齿轮只有6个格，也就是说一次输入字母可能会有6套不同的加密算法，而后一代的恩尼格玛齿轮就增加到了26个格，26套的加密算法，但是感觉还不够用，于是又增加了第二个齿轮，上边也是26个格，这个时候的加密算法就变成了 26乘以26，那就是676套算法，这样的恩尼格玛密码机就可以供商业使用了。但是你要知道，二战的时候，德国军防使用的密码机是一共有8个齿轮，换句话说，一台密码机当中包含了两千多亿套的加密算法。</p><p>两千多亿套加密算法，这是什么概念呢？你要知道，一套最新的大英百科全书包含了6000多万个单词，咱们就算是一个单词有10个字母，那我们把大英百科全书打上300遍，也用不完这两千多亿套的加密算法。</p><p>所以在第二次世界大战期间，英国、法国、波兰他们通过接力合作，通过间谍活动、军事袭击，搞到了商业版的恩尼格玛密码机的原型。后来法国人甚至是拿到了这个军用版恩尼格玛机的说明书和操作指南，但是他们依然没有办法破解这个密码。因为两千多亿套密码，你根本不知道德军用的是哪一套。当初的德军就是假设敌人也会有一模一样的机器，你能拆开看，你能各种研究，但是你还是不能破解。在这个前提下他们才批准使用恩尼格玛机的。所以单从理论上讲，这样的机器几乎是无法攻破的。</p><p>那最终找到破解密码机的钥匙的人，就是图灵。</p><p>图灵是怎么做的呢？他有了这样一个思考，理论上机器、算法是无法攻破的，但是在这个过程中参与的不只有机器，还有人。</p><p><strong>与机器相比，人的行为就要清晰的多了。</strong></p><p>在此之前，英国通过自己的情报系统拿到过一些德军的信息。图灵在研究了之前这些被破解的信息之后，他就注意到了一个趋势，发现这些截取的德军信息里边是大有规律可循。比如说德军在发布信息的时候，有一些句子是反复出现的，比如像“希特勒万岁”，还有在每天的早上六点，德军都会发一份当天的天气报告，而且形式是非常的固定，甚至是单凭经验就能够确定，这里边的第几个单词是德语里天气的那个单词，叫做WETTER。所以知道了这个单词，就是这个WETTER，也知道了加密之后的密文是什么，图灵就可以找到方法去反推这个恩尼格玛的加密算法了。</p><p>具体的数学推导咱们就不展开了，总之是经过了一番的艰苦努力之后，图灵把加密的可能性从两千亿种缩小到了105万种。</p><p>当然，如果是单靠手工计算，那105万仍然是一个天文数字。但是图灵又找到了另一种方法，他专门设计了一种用于破解密码的机器。这个机器就可以说是一种早期专用的计算机，它代号叫做“炸弹”，而且炸弹的数量越多，破解密码的速度也就越快。</p><p>为了让这些炸弹发挥出极致的效果，图灵是需要大量的人手和经费，但是当时的英军官僚机构是不能给他这么大的支持。于是，图灵干脆和其他的教授联名给英国首相丘吉尔写了一封信。丘吉尔收到信之后，给英军的参谋首长下了一道命令，命令里边只有一句话叫做：确保满足他们的一切需要。完成后向我报告。</p><p>图灵终于拿到了自己需要的人力和物力。</p><p>在二战期间，图灵和他的同事一共建造了49台“炸弹”，最快的时候只要花上一个小时就能够破解出德军当天使用的密码。可惜因为保密的需要，图灵的这些功绩在二战之后的很多年都不能被公众知晓。战后其他军人都能够谈论自己在战争中的英雄事迹，而这些密码学家只能够默不作声，一直到1970年，相关的资料才开始陆续被解密，而这个时候图灵已经去世十多年了。</p><p>还有一个细节，二战当中，其实纳粹德国是知道英国有这样一个密码破译小组的，他们甚至知道小组的领导人就是图灵，但是纳粹德国并没有太多的重视。纳粹的情报头子希姆莱甚至是嘲笑过图灵的性取向，他讽刺说“德国的人才实在没有能力尝试如此有特色的行为”。但是正是因为他们的自大，也正是因为图灵的努力，纳粹德国才最终走向了覆灭。</p><p>在图灵解答过的这么多谜题当中，如果说哪一个是对现在影响最大的，那就要数图灵对计算机的贡献了。</p><p>如果你去查计算机的历史，会发现“计算机之父”这个荣誉有两个人，一个人叫冯·诺伊曼，另一个就是图灵。</p><p>**为什么计算机有两个父亲？相当于这两位父亲，一个是理论上推动了计算机的出现，一个是实践上推动了计算机的出现。**<strong>冯·诺依曼的贡献是将计算机变成现实中真正可以实现的设计，而他这套设计依据的那个数学模型就是图灵提出来的。</strong></p><p>图灵的贡献是从数学上建立了一个通用计算机的模型，证明一台计算机在理论上可以做到哪些事情。这个数学模型就叫做“图灵机”。</p><p>不过图灵提出这个模型来还不是为了专门去研究计算机，这其实是他开的一个脑洞，他想要搞清楚数学知识到底能不能由一台机器来证明。不过在他那个时代，想要想清楚这一步，前提就是你得先设计出来一个能够思考数学问题的机器。于是在图灵的想象当中，有这样的一台机器，这台机器需要满足三个特点：</p><p>第一个，人类的计算程序都得把运算的任务分解成一系列最简单的小步骤。而在这台假想的机器上，图灵也要求所有的运算能够分解成一系列最基本的操作，每一个操作都意味着机器内部状态的转化。</p><p>第二个，人类的程序要依照规则完成每一个小步骤。图灵也要求这台假想的机器能够根据规则决定内部的状态，机器可以选择保持现有的状态，或者选择进入一个新的状态。</p><p>第三个，人类计算的时候还得有一个方便记录的载体，能够记下所有中间步骤的结果。哪怕我们四则运算可能都得找一张草稿纸。所以图灵想象中，他直接假想这样的机器也需要有一个无限长的纸带，不管中间的运算或者证明过程多么复杂，需要多么长的步骤，都能够被事无巨细地记下来。机器自带一个打印头，可以在纸袋上边左右移动，能够写下新的符号，或者保留现有的符号，或者是清除原来的符号。</p><p>说到这里，这个大名鼎鼎的图灵机就已经可以呼之欲出了。图灵一开始的那个脑洞，数学的知识究竟能不能由机器来证明，他自己最后是否定了这个可能性。但是从这个思考当中产生了图灵机，产生了这个计算机的理论模型，那却可以说是更有价值的一个收获。</p><p>不仅如此，图灵还想象出了计算机行业的工作模式。什么样的工作模式呢？就是主要通过编写好的程序来让这个机器实现各种的功能，所以会有专业的人员负责编写程序，把复杂的任务分解并且机械化，然后让机器去自动执行。</p><p>你看这不就是今天的程序员吗？所以直到今天，不管是传统的IT，还是新兴的互联网行业，最基本的工作模式还是图灵设想出来的这一套，根本没有从根本上突破它。甚至图灵当时还曾经预言，这样的工作模式一定会带来新的产业，还有就业领域的蓬勃发展，我们现在当然知道他的预言已经变成了实实在在的现实。</p><p>其实在计算机领域图灵还解决了另一个谜题，这个谜题对于我们这些计算机行业之外的人来说，没有图灵机那么有名。但是对于计算机的发展，这个谜题同样的重要，它叫做“停机问题”。</p><p>什么是停机问题呢？如果我们让计算机执行一个普通的程序，比如说算1+2+3+…，一直加到1万，甚至加到10万、100万，只要这个计算机的内存足够大，只要你给的最后一个数是有限的，只要你愿意等待足够长的时间，那么这个程序总有算完停机输出一个结果的时候。</p><p>但是还有另外的一种程序，却是永远都在执行，永远不会停机的。比如说你可以让计算机一直循环在屏幕上边打印出“你好”。那么这个时候你就能看出来这个计算机屏幕上不断地打印出“你好”这两个字，你要是不主动杀死这个程序，它就不会停止，这个就叫做陷入了“死锁”，一直到今天这个“死锁”还是程序员的噩梦，有的时候写程序指不定哪里没有设计好，程序一运行就陷入了“死锁”。所以程序员肯定就会有这样的一个梦想，就是有没有这么一套算法，有没有这么一个软件工具，它能够直接一眼看一下我写的这个程序，就能够判断出来这个程序会不会出现“死锁”，这就是图灵思考的“停机问题”。</p><p>用更准确的定义来讲，就是有没有这样一个程序，它的输入是任何一段代码和这个代码的输入参数，而它的输出则是这段代码所代表的程序在那个参数运行起来之后会不会自动停机。如果判断会停机，就输出一个1，如果判断不会停机会“死锁”，那就输出一个0。</p><p>想要做到这一点，这个判断的程序就必须只读而不能够去执行那段代码，因为如果执行了，这个代码又不会停机的话，那么计算机就会陷入到“死锁”，这个判断程序就不可能输出0了。换句话说，这个判断程序得像一个高水平的计算机程序员一样，看一眼你的代码就能够判断有没有出现“死锁”。</p><p>那么，有没有一个程序真的能够做到这样呢？图灵用逻辑和数学告诉你说，别做梦了，不可能存在。</p><p>那么图灵破解了停机问题的谜题，到底对于计算机的发展有什么意义呢？破解了停机问题，证明了没有这样一个程序存在。相当于图灵给出了一个活生生的例子，说明这个世界上就是有问题是计算机无法解决的，哪怕所有的问题都能够通过数字化去描写，计算机也解决不了所有的问题。所以可以说通过图灵机和停机问题这两个谜题的答案，图灵给计算机划定出了一个能力范围：哪些问题是计算机可以替代人类去实现的，而哪些问题是计算机不能够替代人类，它自己不可能解决的，图灵为计算机立了个法。</p><p>图灵思考的所有谜题当中对于未来影响最大的，那就应该是他对于人工智能的思考了。</p><p>听完前面我们说的这些，你会发现图灵对于计算机的设想已经远超过他所在的那个时代了。但是即使如此，图灵还是不满足，因为计算机还是要根据人类给定的程序去运行，那么这台机器能不能够进一步的演化，取代人类的思考，成为真正智能的机器呢？图灵就在思考这个问题。</p><p>非常好玩的是，在当初图灵的设想里边，如果真的有这么一台智能的机器，他希望来干什么呢？答案是下棋。图灵或许不会想到，几十年之后，全世界掀起人工智能热潮的一个标志性的事件，就是“阿尔法狗”这个会下围棋的智能机器。</p><p>图灵当时还提出，机器是必须要经过和人类的对弈训练才能够学会如何下棋，所以人工智能的机器并不是和人类相互竞争的对手，而是和人类共同进步的伙伴。他的这个想法在当时可以说是引起了巨大的争议。</p><p>如果我们回过头去看50年代初计算机刚刚发明时候的很多争论，会发现今天我们热议的大多数话题，人工智能会不会实现啊？人工智能会不会取代人类？AI会不会有可能奴役人类？类似的争论其实当年都已经有了，而且讨论的相当深入。</p><p>在那些捍卫传统价值的保守人士看来，人类是唯一可以有智能的生物，这是人类价值和尊严的底线。如果承认一台人造的机器也能有智能，那就是对人类尊严的粗暴否定。但是图灵是完全支持机器也可以有智能的，而反对把智能仅仅归于设计机器的人。</p><p>他还曾经专门写过一篇文章，提出了用来衡量人工智能的那个标准。比如说如果人们在和机器下棋的过程中，感受到的是我在和另一个智慧生物斗智斗勇，而不是任何机械性的回应，那我们就没有理由反对机器本身有智能这个判断，这就是著名的图灵测试，<strong>只要机器的行为模式与人类的行为不能被分辨，我们就应该承认机器达到了人工智能的标准</strong>。</p><p>不过图灵虽然成功预言了人工智能未来发展的样子，但是他却预言错了人工智能怎么样去发展的那个路径。</p><p>按照图灵当年的设想，人类的各种智能活动从本质上来说都是有规律可循的，只要展开严格细致的理性分析，总能够发现一些解决问题的通用法则，这个时候再利用这些法则去编写程序，通用智能机器就完全有可能实现了。</p><p>在图灵去世之后，很多科学家都想延续这种探索，但是最终却没有进展，归根到底可能是图灵对于人类智能的理性特征估计的过高了。对于我们人类这种生物的智能有点过于乐观了，很多时候我们做事情其实没有那么理性，也就并不能够真正理解其中的规则，我们只是按照以往的经验做，就可以了。</p><p>在当年，顺着图灵这个思路，有一大批的计算机科学家来设计人工智能，我们可以称之为叫做设计派。设计派就认为人工智能是可以自下而上设计出来的，只要能够给出明确的符号、明确的规则、明确的方法，编写程序，输入计算机，就能够让计算机拥有理性思考的能力。比如说我们让计算机能够在一堆水果里边认清楚苹果，那只要我们找到一个准确的定义，描述出来到底什么是苹果，再把这个定义输入给计算机，计算机就能识别出来这个世界上所有的苹果。</p><p>与设计派相对的还有另一派，我们可以称之为叫做学习派，学习派就认为其实大部分实际问题当中，我们很难找到那种明确的符号、规则和方法，所以我们是需要借助大量的样本，让计算机通过不断学习的方式慢慢拥有智能。</p><p>比如同样是苹果学习派就倾向于让计算机识别大量的图片，相当于我们是教计算机来认一认，这个是苹果，这个也是苹果。除了这些正面的样本，还得让计算机识别反面的样本，这个是香蕉，这个是橘子，在大量识别了正面、反面的样本之后，计算机自己就能找到规律。</p><p>你会发现，后边说的这一派，这个学习派，其实更像是我们人类学习认识世界的过程，咱们教小朋友认识苹果，也是给他看图片。</p><p>学习派的核心理念就是让计算机通过学习和模仿人类大脑的工作原理，通过大量的学习来理解事物，这个时候才能够拥有人类的智能。只可惜在当年学习派并不是主流。</p><p>图灵的预言使得大多数的计算机科学家顺理成章地认为，计算机的人工智能领域，设计派的思路是完全行得通的。</p><p>没有想到，他们很快就遇到了难题。</p><p>这个难题就叫做积木问题，顾名思义就是怎么让机器人像小朋友一样能够学会堆积木。积木问题的目标是编写一个能够理解命令的程序，比如说找到一块大的黄色积木，把它放到红色积木的上边，然后把这个程序变成那种机器手臂可以完成的动作。这事听起来挺简单的，小朋友们都能做，可是教会机器人对积木要比人们想象的难得多。计算机科学家们发现他们编写出了庞大的程序，可是还是错误百出，频频崩溃。</p><p>看着程序崩溃，科学家们也挺崩溃。毕竟积木已经是对现实世界的简化了，现实世界的物体有那么多不同的形状，那么多不同的大小和重量。就算是机器人解决了积木问题，他想在现实世界当中完成一个任务，比如说一栋大楼的建设，这中间还是有巨大的技术鸿沟，但是积木问题这么一个看起来如此简单的挑战，实现起来却比任何人想象当中都要难得多。</p><p>顺便说一句，这个积木问题是一直到了8年前，也就是2016年才得到了解决。我们可以看出来，当年的图灵还是过于乐观了，他对于人类的理性，对于计算机的理性可能都有些高估了。</p><p>在图灵的生命当中，最不应该出现的一个谜题应该就是那颗结束他生命的苹果了。</p><p>这颗苹果是怎么来的呢？1951年底，图灵认识了一名19岁的年轻男子，这个年轻男子叫阿诺德，图灵和阿诺德开始交往，也邀请他在自己家里过夜。然而在这之后不久，图灵发现自己的家里边开始丢东西，而这个阿诺德就是一个曾经有过小偷小摸行为的无业游民。图灵就认为他家里丢的东西一定和阿诺德有关，于是愤怒地要求和阿诺德断绝来往，但是阿诺德坚持不肯承认。</p><p>图灵于是就想办法收集了阿诺德的指纹交给了警方，后来证明这个窃贼确实是阿诺德的朋友，而且他也向警方指正了阿诺德和图灵之间有的这种伙伴关系。恰恰图灵又给警察提供了阿诺德的指纹，这就相当于印证了这种关系。于是警察也逮捕了图灵，并且以犯了严重的猥亵罪，起诉了图灵。图灵的同性恋身份就不可避免地被曝光了。</p><p>但是在这个过程当中，图灵本人其实是无比坦然的。在警察那里，图灵招认了一切，他承认自己与阿诺德有亲密的关系，而且甚至是描述了具体的过程。警察也同样被震撼了，不仅是因为图灵的坦然，而且是由于图灵是从心里边根本就觉得这没有什么值得羞耻的地方。</p><p>图灵这种坦然另一个证据就是从被捕到审讯这一个多月的时间里边，图灵还在积极地工作，参加过几次和化学有关的学术会议，还提交了一篇数学的论文，这也体现了图灵一贯坚持的一个原则，那就是要按照事实和理性的要求去做事。</p><p>可是这个原则对于自然科学的研究非常必要，却不能简单适用于人类的社会。所谓客观事实，在理解人类自身行为的时候，往往是不够的，甚至可能会导致事与愿违的结果。</p><p>最终判决结果下来了，图灵并没有被送进监狱，而是获得了缓刑。但是在缓刑一年期间，他必须接受化学阉割法的治疗，也就是被注射了雌性激素。在接下来的两年中，图灵不但身体发生了改变，他的精神也受到了激素的影响。</p><p>最终在1954年6月7号的晚上，人类历史上一颗伟大的大脑停止了思考。</p><p>第二天一早，图灵被人发现躺在床上口吐白沫，他的身旁还有一个果酱罐子，里边装满了剧毒的氰化物，身边还有一个被咬过一口的苹果。验尸官断定，他就是用苹果蘸着氰化物吃下去自杀的。</p><p>在图灵去世后的55年，2009年，有超过3万名英国人签名请愿，要求英国政府向图灵道歉。当时的英国首相布朗在报纸上向图灵发布了公开的道歉。2013年，英国女王签发了对图灵的赦免令，这相当于推翻了当年不公正的判决。</p><p>只不过对于图灵来说，来自于人类的谅解，要比计算机的发展，要比人工智能的发展还要来得更晚一些。</p><p>我想用这样的一个故事，为图灵的一生作为结尾。</p><p>1952年，英国广播公司制作了一期节目，邀请了四位科学家进行圆桌对话，讨论的就是计算机到底是不是真的会思考。其中一位嘉宾就是图灵。</p><p>图灵在节目里是这么说的：</p><blockquote><p>“的确，当孩子接受教育时，父母和老师会不断干预，阻止他这样做，或者鼓励他那样做。但是让人试图教机器时，情况就不一样了。我做了一些实验，教机器做一些简单的操作，在得到任何结果之前需要大量这样的干预。换句话说，机器学得太慢了，需要大量的教学。”</p></blockquote><p>这会儿主持人插了一句：“是谁在学习呢，你？还是机器？”</p><p>图灵回答：“我想，我们都在学。”</p><p>纵观图灵的一生，你会发现他对人类充满着乐观，他对人工智能也充满着乐观。可是他的故事又告诉我们，**人、机器都不是完美的智能体，他们都有自己的缺陷。**所以我想这才是他说出那句话的理由，我想，我们都在学。</p><p>感谢你的收看，如果你喜欢这一期节目，拜托多多转发到知识城邦，转发到微信朋友圈，谢谢你的支持。你还想听哪些人物，欢迎留言告诉我。</p><p>下一期我们要讲另一位伟大的科学家，爱因斯坦。</p><p>谢谢你的收看，章鱼书场，每周开讲，咱们下周六再见。</p>',124))])}const F=e(d,[["render",g]]);export{_ as __pageData,F as default};
